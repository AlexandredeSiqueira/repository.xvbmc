v0.9.51

    Fixed adding local torrent files causing crash
    Added saving .torrent files and resuming session from them instead of using fastresume files only, #357
    Web UI can now add torrents without starting to stream
    Hovering over the progress bar in web UI shows the percentage
    Fixed memory leak when adding a torrent file from a URI
    Properly fixed wrong resolution in choose stream dialog, #261 ðŸ”¥
    Check available space when resuming torrents or adding from web UI


v0.9.50

    Switched libtorrent to RC_1_1 branch (see changelog)
        Fixes torrent_error_alert and file_error_alert using internal storage on Android, #620
        Seems to have fixed random crashes when seeding starts
        Possible fix for fastresume files getting corrupted
    Added tuned storage setting (uses more RAM), mostly for Android external storage and OS-mounted NAS setups
        Enabled pool allocators on Android
        read_cache and coalesce_reads/coalesce_write enabled
        max_queued_disk_bytes at 10MB instead of 1MB
        automatic cache_size (1/8 of RAM) instead of 16MB
    Fixed background progress dialog not properly closed or reset when changing settings or shutting down
    Ask to keep the files switched to Ask to delete the files


v0.9.49

    Upgraded to libtorrent 1.1.1
        All your settings should work just as before
        Please double-check if you were using the SOCKS5 proxy, since all proxy types that libtorrent supports are now also available (SOCK4, SOCKS5[w/pw], HTTP[w/pw], I2PSAM)
        Android users might be able to use external storage with the much improved disk operations, and OS-mounted NAS might even work too, please report on this (#51, #72, #98, #131, #233, #481, #482, #608, ...)
        Listen port min and Listen port max settings should be reduced to 6881 and 6885 respectively (libtorrent default is 6881 only)
        All fixes and improvements since 1.1.0
    Added encryption policy and proxy type settings
    Added Play button in web UI, nicer favicon
    Added user-agent spoofing setting (highly inadvisable)
    Cache no longer needs clearing after changing settings or upgrading #616
    Exclude excessive /torrents/list logging from web UI calls
    Fixed memory leaks in fast resume saving and loading #441
    Fixed upgrade loop when GitHub API failed to return last tag #591
    Fixed wrong resolution of combined results with different names #261
    Show all provider names of combined results
    Separate private tracker results for same infohash
    Prevent updating add-on repositories twice
    Fixed alert mask not being re-applied on reconfigure
    Fixed invalid fastresume files preventing subsequent ones from loading
    Fixed regression introduced in v0.9.7 (that's right) where LSD/DHT/UPNP/NATPMP never started unless user applied a settings change on each session
    Other stability fixes


v0.9.48

    Fixed fast resume loading stuck in Finding state
    Fixed playback not starting when adding torrent in web UI


v0.9.47

    Added Web UI, available at http://<Kodi hostname or IP>:65251/web/


v0.9.46

    Added support for private trackers #38
    Fixed resuming torrent sometimes causing crash
    Fixed removing fastresume files reliably
    Fixed images not showing up in Trakt lists for some languages #599
    Updated Portuguese (Brazil) translation


v0.9.45

    Hotfix for 'TypeError: When using "cast" or "castandrole"...' #597
    Updated Romanian translations
	

v0.9.44

    Fixed OpenSubtitles implementation
    Added OpenSubtitles settings for username and password
    Added a few missing InfoLabels of currently playing file #256
    Updated Hebrew and Portuguese translation
    Moved donation dialog to add-on
	

v0.9.43

    Added 'Disable UPNP & NATPMP' setting #385
    Added 'Toggle watched' context menu #24
    Fixed GetShow error on missing TMDB ID when adding lists to library #585
    Daemon gets all settings at once on launch #12
    Added a donation dialog on first run after install/upgrade
	

v0.9.42

    Added 'Ask to keep the files after streaming' #14
    Added TV scraper setting for duplicate handling #32
    Fixed regression introduced in v0.9.36 when adding a show to the library #585
    Moved Trakt/Trending above Trakt/Popular
    Show background progress on two lines
	

v0.9.41

    Hotfix for missing Trakt images #578
    Finnish translations
	

v0.9.40

    Added duplicate handling to library integration #32
    Custom Trakt lists also get updated #398
    Fixed Trakt images #558
    Improved error messages of dreaded Navigation error
	

v0.9.39

    Added context menu to import Trakt watchlist, collection and custom lists to library #398
    Added setting for sync frequency of Trakt lists to library
    Added library update frequency setting #464
    Fixed a cache-clearing loop bug
	

v0.9.38

    Hotfix: Updated old paths for Watchlist and Collection of shows #578
    Bonus: New Krypton theme for stream selection dialog
	

v0.9.37

    Added custom Trakt list support
    Fixed stuck 'Opening stream' window #569
    Added missing DBTYPE, IMDBNumber and OriginalTitle infolabels #566
    Fixed with_cookies method for providers
    Improved CloudHole integration
    Updated default trackers
    Updated golang to 1.7.4
	

v0.9.36.1
---------------------------------
*XvBMC version-control: v.0.9.35*
---------------------------------


v0.9.36 [ORIGINAL]

    Fixed slow startup on Windows #12
    Fixed crash on macOS Sierra #529
    Added 1440p/4K tags and resolutions #537
    Fixed a few crashes on 404s #542
    Updated golang to 1.7.3 and OpenSSL 1.0.2j
	

v0.9.35

*Maintenance*release*

    Subtract seeders from peer count
    Updated Spanish translations
    libtorrent 1.0.10
    golang 1.7.1
	

v0.9.34

    Fixed issue updating skin add-ons, #41
    Moved up Trakt under Search
    Added missing Top rated and Most voted shows
    Fixed speed wrongly displayed as kb/s, #473
    Updated golang to 1.6.2
    Updated OpenSSL to 1.0.2h
    Updated translations
	

v0.9.33

    Keep track of previously chosen torrents, #148
    Fix TvShowTitle InfoLabel for episodes and seasons, #395
    Handle canceling Trakt authentication
    Use pagination setting for Trakt only, TMDB doesn't support it
    Added search history, #411
    Added H.265 codec tag
    Updated translations


v0.9.32

    Fixed stop action of Trakt scrobble
    Fixed library update delay on startup


v0.9.31

    Added Trakt scrobbling
    Improved error handling
    Setting for library update delay on startup (was fixed at 60 seconds)
    Fixed mixed type external IDs from TMDB causing crash in Shows lists
    Translations


v0.9.30

    Improve error handling and fix http error on Trakt authorization, #387
    Add support for CloudHole API key
    Updated translations


v0.9.29

    Hotfix: Trakt.tv authentication only required in relevant sections, #383


v0.9.28

    Hotfix: Only fetch CloudHole clearances when required and re-use them


v0.9.27

    Added Trakt list integration, #31
    Updated translations


v0.9.26

    Added share ratio, seed time ratio and seed time limits, #147
    Added option to disable DHT for use with private trackers, #38 #262
    Added option for adding Specials to library, #104
    Moved top Trakt lists to own sub-section with new icons
    Toggle Add to library and Remove from library, #259
    Replaced 'Enable pagination' with 'Results per page' setting
    Apply pagination to searches and IMDB top 250, #279 #313
    Toggle pause/resume for torrents and session
    Show seeding ratios/time in torrents list, #215


v0.9.25

    Fix for Raspberry Pi 2/3, #331
    Fix absolute number for Anime episodes, #330
    Disabled background handling by default

For those on Raspberry Pi 2 or 3, you will need to update manually, 
using the linux_armv7 package or the all-binaries package <========


v0.9.24

    Added support for linux-armv7 and linux-arm64, #26
    Fixed shutdown crash on Windows, #214
    More InfoLabels to VideoPlayer for skins, #256
    Updated libtorrent to 1.0.9 and OpenSSL to 1.0.2g
    Updated translations


v0.9.23

    Added search_season method for providers to support complete season search, #195
    Fix for subtitles and write permission errors of temp files on some Android setups, #78
    Improved fix for episodes missing translated title, #249
    Pass a few more InfoLabels to VideoPlayer, #256
    Translations


v0.9.22

    Added resolution preferences and balanced mode
    Fix for missing episode titles, #249
    Set HDTV only streams to 480p
    Recent episodes of last 3 days instead of last week
    Catch SystemExit exceptions, possible fix for #214


v0.9.21

    Added Trakt top lists
    Fixed providers receiving translated TV show name
    Prevent download path from being empty
    Translations


v0.9.20

    Fixed library integration after switch to TMDB for all TV Shows data, #228
    Fixed backdrop images for Episodes
    Fixed forum link in add-on description
    Eased out rate limiter for longer lists
    Translations

Please remove your QuasarDB.json before or after this update, otherwise
you'll see Panic recovery -> Bad status: 404 errors followed by Golang
stacktraces. Apologies for the inconvenience, but those are still pre-1.0
releases.


v0.9.19

    Added setting for personal TheMovieDB API key
    Fixed new default key and check on startup, #226
    Added multi-cloud icon support for merged streams


v0.9.18

    Add icon support and color-coded resolutions, #171
    Use proper background image for dialogs, #121
    Add "Prefer use of original title" setting, #200
    Toggle enable/disable in context menu for providers
    Fixed KeyError in AddonCheck method
    El translations


v0.9.17

    Fixed issue with some translations causing dialogs not to show up, #142
    Fixed logging of built-in JSON-RPC server
    Fixed mix-up between titles and original titles
    Fixed buffer dialog kept in a silent loop after a "not enough space" error
    Updated translations as usual


v0.9.16

    Default view per content type, #19
    Remove use of distutils since it's missing on OpenELEC


v0.9.15

    Improved use of getLocalizedString, #142
    Sort providers by Enabled and Status
    Improved daemon logging
    Updated translations


v0.9.14

    Fix usage of go-logging after breaking change in formatting


v0.9.13

    Health checks for providers
    Prevent crash/restart loops
    Overlay status vertical offset setting
    Updated translations


v0.9.12

    Updated XML-based Choose stream dialog
    Translation checks on future pull requests
    Fixed Russian translation


v0.9.11

    More relevant Recently Released, #136
    Fast resume files saved in Torrents folder, #138
    Muchos Translations


v0.9.10

    Added Recently Released, Recent Shows and Recent Episodes sections
    Refresh torrent list after resume/pause/delete actions
    Updated translations


v0.9.9

    Fixed fast resume files loaded on startup regardless of Background handling setting, #101
    Fixed checking available space and remove from background download if it fails, #109
    Fixed background dialog still showing up for paused torrents
    Torrents list now shows status and progress
    Added Resume and Pause context menus for torrents and whole session
    Added support to play torrent files #22
    Library integration now ignores non-aired shows
    Cleanly shutdown daemon on exit and close all dialogs


v0.9.8

    Added background progress dialog


v0.9.7

    Background handling of streams
    Fast resume support
    Load streams from fast resume data on startup
    Updated translations


v0.9.6

    Revamped list view of available streams #43
    Generate changelog with dates from release notes
    Fixed version display of built-in repository


v0.9.5

    Fix platform-specific upgrades (really, no more 50-60MB downloads)


v0.9.4

    Platform-specific upgrades (no more 50-60MB downloads after this)
    Added setting to limit the number of connections
    Added support for android-x86


v0.9.3

    improve reliability of built-in repository
    only use releases and assets instead of tags and tarballs


v0.9.2

    fix for Android devices depending on /storage/emulated/legacy #56
    improve error handling when updating Quasar daemon


v0.9.1

    Fix checking available space #2
    Detect and notify if daemon binary is missing
    Log system versions for debugging and supporting new platforms
    Android fix for Marshmallow
    Library integration fix for single season shows #48
    Season pack compatibility #17
    Improved exception handling and logging
    Updated translations

v0.9.1

![](http://i.imgur.com/4eQhijh.png)

[![Build Status](https://travis-ci.org/scakemyer/plugin.video.quasar.svg?branch=master)](https://travis-ci.org/scakemyer/plugin.video.quasar)

What it is
----------
Quasar is an torrent finding and streaming engine. It doesn't go on torrent websites for legal reasons. However, it calls specially crafted addons (called providers) that are installed separately. They are normal XBMC addons, and thus can be installed/updated/distributed just like any other addon.

This project is a fork of the well known, but no longer maintained Pulsar project from [steeve](https://github.com/steeve/plugin.video.pulsar).
Big thanks for his great job.

Supported platforms
-------------------
- Windows
- Linux 32/64 bits (starting Ubuntu 12.04)
- Linux ARM (Raspberry Pi, Cubox i4pro etc...)
- OS X 64 bits
- Android ARM and x64

Download
--------
See the [Releases](https://github.com/scakemyer/plugin.video.quasar/releases) page. **Do NOT use the `Download ZIP` button on this page.**


Installation
------------
- Install Quasar like any other addon
- Go to Settings > Services > Remote Control and **enable both options**
- Restart XBMC

Build
-----
The entire build process of Quasar is automated using Travis CI, and that's a
good thing because it's quite a complicated one with many dependencies and
repositories. Here's the stack from top to bottom:

- [quasar](https://github.com/scakemyer/quasar) - The Quasar daemon itself, built on top of the cross-compiled libtorrent-go
- [libtorrent-go](https://github.com/scakemyer/libtorrent-go) - The libtorrent library with Go bindings, built using cross-compiler
- [cross-compiler](https://github.com/scakemyer/cross-compiler) - Builds the base images to, you guessed it, cross-compile Quasar

#### Build status of each project
| quasar daemon | libtorrent-go | cross-compiler |
| ------------- | ------------- | -------------- |
| [![Build Status](https://travis-ci.org/scakemyer/quasar.svg?branch=master)](https://travis-ci.org/scakemyer/quasar) | [![Build Status](https://travis-ci.org/scakemyer/libtorrent-go.svg?branch=master)](https://travis-ci.org/scakemyer/libtorrent-go) | [![Build Status](https://travis-ci.org/scakemyer/cross-compiler.svg?branch=master)](https://travis-ci.org/scakemyer/cross-compiler) |

There are different ways to build the Quasar daemon. You can either pull the different Docker images or build it all yourself. If you want to go for the latter, start by building the cross-compiler images, then libtorrent-go, and come back to Quasar afterwards. There should be enough info in each of the projects to get you started, but you'll obviously have to dive into the code at some point.

Since the whole build process is now automated, this repository is using [pre-built binaries](https://github.com/scakemyer/quasar-binaries) from the last Quasar daemon build as a submodule. Here's how you'd build this add-on using those:
```
git clone https://github.com/scakemyer/plugin.video.quasar
cd plugin.video.quasar
git submodule update --init
make
```

How it works
------------
Quasar is a torrent finding and streaming engine. **It doesn't go on torrent websites for legal reasons**. It calls specially crafted addons (called **providers**) that are installed separately. They are normal XBMC addons, and thus can be installed/updated/distributed just like any other add-on.

Quasar is centred around media: it browses media from [TheMovieDB](https://www.themoviedb.org/) and [TheTVDB](http://thetvdb.com/).
And so, when you decide you want to watch a media (i.e. given an IMDB or TVDB Id), here's what Quasar does:

- Enumerate the installed providers
- Call each provider to find the media you want to watch (in parallel)
- Each provider returns a list of BT links they found
- Collects and de-duplicates all the links
- Goes on the BitTorrent network to find out the number of seeds and peers in real time (i.e. not provided by the provider)
- Finds out of which quality are the different links (thanks to their name)
- Ranks the links by quality and availability (Quasar privileges quality over availability, but it's not dumb. However, you can get a full list to choose from manually it you want, or enable 'Choose Stream by default' to always choose manually)
- Sends the chosen link to the BitTorrent streaming engine (brand new, and completely rewritten)

All of this is done in less than 1s. Quasar is around 95% Go, and thus, it's *fast*. Very fast, actually.

The BitTorrent streaming engine is brand new and very resilient (or at least it's designed to be). It's built on top of the brand new libtorrent 1.0 (which had special patches for the streaming case). So it's very optimized, especially for low CPU machines. I have yet to find a media that doesn't play with the engine.


Providers
---------
As said before, Quasar **relies on providers to find streams**. Providers are easy to write, and average ~20 lines of Python. As they are normal XBMC add-ons, which can have their own configuration (although it is not recommended because it complicates things).

Sample Quasar provider: [https://github.com/scakemyer/script.quasar.dummy](https://github.com/scakemyer/script.quasar.dummy)

Providers are given a max amount of time to run before Quasar considers them to be too slow. The timeouts are as follow:
- 10 seconds on Intel CPUs
- 20 seconds on multi-core ARM CPUs
- 30 seconds on single core ARM CPUs (Raspberry Pi)

Please note that for legal reasons, **I won't discuss, develop nor distribute any providers connecting to illegal sources**. So there is no need to ask me.
While I can partake in general discussions regarding provider development, **I won't do so for illegal sources specific problems**.


FAQ
---
##### I can't code. How can I help?
Spread the word. Talk about it with your friends, show them, make videos, tutorials. Talk about it on social networks, blogs etc...

##### The plugin doesn't work, what can I do?
Please search currently [open and closed issues](https://github.com/scakemyer/plugin.video.quasar/issues) to see if it has already been reported and/or fixed. If not then add a new issue with a short but descriptive title, a detailed description and of course a link to the logs. If you don't know how to do that, just follow the guide at: [http://kodi.wiki/view/Log_file/Easy](http://kodi.wiki/view/Log_file/Easy). If you actually went through the logs and know the relevant part, you can instead paste that, as long as it's shorter than a hundred lines or so, and please enclose it in triple back-quotes for readability.

##### Can I seek in a video?
Yes, but it can fail.

##### What about seeding?
When watching a torrent, **you will be seeding while you watch the stream**.

##### Does it downloads the whole file? Do I need the space? Is it ever deleted?
Yes, yes and yes.

##### Can I keep the file after watching it?
Yes, change it in the addon settings.

##### Can I set it to download directly to my NAS?
Yes, but **you need to mount your NAS via the OS, not via XBMC**.

##### Provider X is blocked in my country/ISP, how can I set another domain?
Sorry, I won't comment of specific providers.


Screenshots
-----------
![](http://i.imgur.com/uchej1p.png)
![](http://i.imgur.com/0ybvekN.jpg)
![](http://i.imgur.com/L103Xt1.jpg)
![](http://i.imgur.com/8qSwVk1.jpg)
